@using Microsoft.AspNetCore.Identity
@using Todo.Services
@using Todo.Services.Gravatar

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">

                    @{
                        var iu = await UserManager.GetUserAsync(User);
                        var emailAddress = await UserManager.GetEmailAsync(iu);
                        var profile = await GravatarApi.GetProfile(emailAddress);
                    }
                    
                    @*Use gravatar profile (displayname + photo) if exists*@
                    @if (profile != null)
                    {
                        <img src="@profile.Photo" class="profile-image" alt="@profile.DisplayName" />
                        @profile.DisplayName

                        <text> | </text>
                    }
                    else
                    {
                        <img src="/images/default_no_image.png" class="profile-image" alt="@Model.Email" />
                    }

                    @UserManager.GetUserName(User)
                </a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}