@using Todo.Controllers
@using Todo.Data
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem

@inject ApplicationDbContext dbContext

@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<h4>Add New Item</h4>

<div class="col-md-4">
    <section>
        @using (Html.BeginForm("Create", "TodoItem", FormMethod.Post, new { @id = "newTodoItem" }))
        {
            <span id="addNewItemError" class="text-danger"></span>

            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.TodoListId)
            <div class="form-group">
                <label asp-for="TodoItemCreateFields.Title"></label>
                <input name="Title" class="form-control" required="required" />
            </div>

            <div class="form-group">
                <label asp-for="TodoItemCreateFields.Rank"></label>
                <input name="Rank" class="form-control" required="required" type="number" />
            </div>

            <div class="form-group">
                <label asp-for="TodoItemCreateFields.Importance"></label>
                @Html.DropDownList("Importance",
            SelectListConvenience.ImportanceSelectListItems,
            new {@class="form-control"}
            )
            </div>

            <div class="form-group">
                <label asp-for="TodoItemCreateFields.ResponsiblePartyId"></label>
                @Html.DropDownList("ResponsiblePartyId",
            dbContext.UserSelectListItems(),
            new {@class="form-control"}
            )
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-default">Save</button>
            </div>
        }
    </section>
</div>

<div class="col-md-6">

    <ul id="todoItems" class="list-group">
        <li class="list-group-item">
            <div class="row">
                <div class="col-md-8">

                    Order by:&nbsp;
                    @if (Model.SortBy == "rankAsc")
                    {
                        @Html.ActionLink("Rank Desc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "rankDesc", hideDone = Model.HideDone})
                    }
                    else
                    {
                        @Html.ActionLink("Rank Asc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "rankAsc", hideDone = Model.HideDone})

                    }
                    &nbsp;|&nbsp;
                    @if (Model.SortBy == "importanceAsc")
                    {
                        @Html.ActionLink("Importance Desc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "importanceDesc", hideDone = Model.HideDone})
                    }
                    else
                    {
                        @Html.ActionLink("Importance Asc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "importanceAsc", hideDone = Model.HideDone})
                    }
                </div>
                <div class="col-md-4 text-right">

                    @if (Model.HideDone == true)
                    {
                        @Html.ActionLink("Show Done", "Detail", new { todoListId = Model.TodoListId, sortBy = Model.SortBy, hideDone  = false})
                    }
                    else
                    {
                        @Html.ActionLink("Hide Done", "Detail", new { todoListId = Model.TodoListId, sortBy = Model.SortBy, hideDone  = true})
                    }
                </div>
            </div>
        </li>

        @foreach (var item in Model.Items)
        {
            <partial name="_TodoItemPartial" model="item" />
        }
    </ul>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $("#newTodoItem").validate();
        });

    </script>
}