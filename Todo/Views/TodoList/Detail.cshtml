@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-8">

                    Order by:&nbsp;
                    @if (Model.SortBy == "rankAsc")
                    {
                        @Html.ActionLink("Rank Desc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "rankDesc", hideDone = Model.HideDone})
                    }
                    else
                    {
                        @Html.ActionLink("Rank Asc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "rankAsc", hideDone = Model.HideDone})

                    }
                    &nbsp;|&nbsp;
                    @if (Model.SortBy == "importanceAsc")
                    {
                        @Html.ActionLink("Importance Desc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "importanceDesc", hideDone = Model.HideDone})
                    }
                    else
                    {
                        @Html.ActionLink("Importance Asc", "Detail", new { todoListId = Model.TodoListId, sortBy  = "importanceAsc", hideDone = Model.HideDone})
                    }
                </div>
                <div class="col-md-4 text-right">

                    @if (Model.HideDone == true)
                    {
                        @Html.ActionLink("Show Done", "Detail", new { todoListId = Model.TodoListId, sortBy = Model.SortBy, hideDone  = false})
                    }
                    else
                    {
                        @Html.ActionLink("Hide Done", "Detail", new { todoListId = Model.TodoListId, sortBy = Model.SortBy, hideDone  = true})
                    }
                </div>
            </div>
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClasses = (item.IsDone ? "item-done " : string.Empty);

            switch (item.Importance)
            {
                case Importance.High:
                    contextualClasses += "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClasses += "list-group-item-info";
                    break;
                default:
                    contextualClasses += "";
                    break;
            }


            <li class="list-group-item @contextualClasses">

                <div class="row">
                    <div class="col-md-1">
                        <small>
                            @item.Rank
                        </small>
                    </div>
                    <div class="col-md-5">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-6 text-right">
                        <div class="content-gravatar-partial" data-email="@item.ResponsibleParty.Email">
                            <img src="~/images/loading.gif" width="20px" alt="Loading data, please wait" />
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>